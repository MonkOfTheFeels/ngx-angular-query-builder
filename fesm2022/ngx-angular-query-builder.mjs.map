{"version":3,"file":"ngx-angular-query-builder.mjs","sources":["../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-operator.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-field.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-entity.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-switch-group.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-button-group.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-input.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-remove-button.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-empty-warning.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-arrow-icon.directive.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-builder.component.ts","../../../projects/ngx-angular-query-builder/src/lib/query-builder/query-builder.component.html","../../../projects/ngx-angular-query-builder/src/lib/ngx-angular-query-builder.module.ts","../../../projects/ngx-angular-query-builder/src/public-api.ts","../../../projects/ngx-angular-query-builder/src/ngx-angular-query-builder.ts"],"sourcesContent":["import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryOperator]\",\r\n    standalone: false\r\n})\r\nexport class QueryOperatorDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryField]\",\r\n    standalone: false\r\n})\r\nexport class QueryFieldDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryEntity]\",\r\n    standalone: false\r\n})\r\nexport class QueryEntityDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[querySwitchGroup]\",\r\n    standalone: false\r\n})\r\nexport class QuerySwitchGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryButtonGroup]\",\r\n    standalone: false\r\n})\r\nexport class QueryButtonGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryInput]\",\r\n    standalone: false\r\n})\r\nexport class QueryInputDirective {\r\n  /** Unique name for query input type. */\r\n  @Input()\r\n  get queryInputType(): string {\r\n    return this._type;\r\n  }\r\n  set queryInputType(value: string) {\r\n    // If the directive is set without a type (updated programatically), then this setter will\r\n    // trigger with an empty string and should not overwrite the programatically set value.\r\n    if (!value) {\r\n      return;\r\n    }\r\n    this._type = value;\r\n  }\r\n  private _type!: string;\r\n\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryRemoveButton]\",\r\n    standalone: false\r\n})\r\nexport class QueryRemoveButtonDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryEmptyWarning]\",\r\n    standalone: false\r\n})\r\nexport class QueryEmptyWarningDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[queryArrowIcon]\",\r\n    standalone: false\r\n})\r\nexport class QueryArrowIconDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  NG_VALIDATORS,\r\n  ValidationErrors,\r\n  Validator\r\n} from \"@angular/forms\";\r\nimport { QueryOperatorDirective } from \"./query-operator.directive\";\r\nimport { QueryFieldDirective } from \"./query-field.directive\";\r\nimport { QueryEntityDirective } from \"./query-entity.directive\";\r\nimport { QuerySwitchGroupDirective } from \"./query-switch-group.directive\";\r\nimport { QueryButtonGroupDirective } from \"./query-button-group.directive\";\r\nimport { QueryInputDirective } from \"./query-input.directive\";\r\nimport { QueryRemoveButtonDirective } from \"./query-remove-button.directive\";\r\nimport { QueryEmptyWarningDirective } from \"./query-empty-warning.directive\";\r\nimport { QueryArrowIconDirective } from \"./query-arrow-icon.directive\";\r\nimport {\r\n  ButtonGroupContext,\r\n  Entity,\r\n  Field,\r\n  SwitchGroupContext,\r\n  EntityContext,\r\n  FieldContext,\r\n  InputContext,\r\n  LocalRuleMeta,\r\n  OperatorContext,\r\n  Option,\r\n  QueryBuilderClassNames,\r\n  QueryBuilderConfig,\r\n  RemoveButtonContext,\r\n  ArrowIconContext,\r\n  Rule,\r\n  RuleSet,\r\n  EmptyWarningContext\r\n} from \"./query-builder.interfaces\";\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  HostBinding\r\n} from \"@angular/core\";\r\n\r\nexport const CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\nexport const VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: \"query-builder\",\r\n    templateUrl: \"./query-builder.component.html\",\r\n    styleUrls: [\"./query-builder.component.scss\"],\r\n    providers: [CONTROL_VALUE_ACCESSOR, VALIDATOR],\r\n    standalone: false\r\n})\r\nexport class QueryBuilderComponent implements OnChanges, ControlValueAccessor, Validator {\r\n  public fields: Field[];\r\n  public filterFields: Field[];\r\n  public entities: Entity[];\r\n  public defaultClassNames: QueryBuilderClassNames = {\r\n    arrowIconButton: \"q-arrow-icon-button\",\r\n    arrowIcon: \"q-icon q-arrow-icon\",\r\n    removeIcon: \"q-icon q-remove-icon\",\r\n    addIcon: \"q-icon q-add-icon\",\r\n    button: \"q-button\",\r\n    buttonGroup: \"q-button-group\",\r\n    removeButton: \"q-remove-button\",\r\n    switchGroup: \"q-switch-group\",\r\n    switchLabel: \"q-switch-label\",\r\n    switchRadio: \"q-switch-radio\",\r\n    rightAlign: \"q-right-align\",\r\n    transition: \"q-transition\",\r\n    collapsed: \"q-collapsed\",\r\n    treeContainer: \"q-tree-container\",\r\n    tree: \"q-tree\",\r\n    row: \"q-row\",\r\n    connector: \"q-connector\",\r\n    rule: \"q-rule\",\r\n    ruleSet: \"q-ruleset\",\r\n    invalidRuleSet: \"q-invalid-ruleset\",\r\n    emptyWarning: \"q-empty-warning\",\r\n    fieldControl: \"q-field-control\",\r\n    fieldControlSize: \"q-control-size\",\r\n    entityControl: \"q-entity-control\",\r\n    entityControlSize: \"q-control-size\",\r\n    operatorControl: \"q-operator-control\",\r\n    operatorControlSize: \"q-control-size\",\r\n    inputControl: \"q-input-control\",\r\n    inputControlSize: \"q-control-size\"\r\n  };\r\n  public defaultOperatorMap: { [key: string]: string[] } = {\r\n    string: [\"=\", \"!=\", \"contains\", \"like\"],\r\n    number: [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\"],\r\n    time: [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\"],\r\n    date: [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\"],\r\n    category: [\"=\", \"!=\", \"in\", \"not in\"],\r\n    boolean: [\"=\"]\r\n  };\r\n  @Input() disabled = false;\r\n  @Input() data: RuleSet = { condition: \"and\", rules: [] };\r\n\r\n  @HostBinding(\"attr.query-builder-condition\") get condition() {\r\n    return this.data?.condition;\r\n  }\r\n\r\n  // For ControlValueAccessor interface\r\n  public onChangeCallback!: () => void;\r\n  public onTouchedCallback!: () => any;\r\n\r\n  @Input() allowRuleset = true;\r\n  @Input() allowCollapse = false;\r\n  @Input() emptyMessage = \"A ruleset cannot be empty. Please add a rule or remove it all together.\";\r\n  @Input() classNames: QueryBuilderClassNames = {};\r\n  @Input() operatorMap: { [key: string]: string[] } = {};\r\n  @Input() parentValue?: RuleSet;\r\n  @Input() config: QueryBuilderConfig = { fields: {} };\r\n  @Input() parentArrowIconTemplate!: QueryArrowIconDirective;\r\n  @Input() parentInputTemplates!: QueryList<QueryInputDirective>;\r\n  @Input() parentOperatorTemplate!: QueryOperatorDirective;\r\n  @Input() parentFieldTemplate!: QueryFieldDirective;\r\n  @Input() parentEntityTemplate!: QueryEntityDirective;\r\n  @Input() parentSwitchGroupTemplate!: QuerySwitchGroupDirective;\r\n  @Input() parentButtonGroupTemplate!: QueryButtonGroupDirective;\r\n  @Input() parentRemoveButtonTemplate!: QueryRemoveButtonDirective;\r\n  @Input() parentEmptyWarningTemplate!: QueryEmptyWarningDirective;\r\n  @Input() parentChangeCallback!: () => void;\r\n  @Input() parentTouchedCallback!: () => void;\r\n  @Input() persistValueOnFieldChange = false;\r\n\r\n  @ViewChild(\"treeContainer\", { static: true }) treeContainer!: ElementRef;\r\n\r\n  @ContentChild(QueryButtonGroupDirective)\r\n  buttonGroupTemplate!: QueryButtonGroupDirective;\r\n  @ContentChild(QuerySwitchGroupDirective)\r\n  switchGroupTemplate!: QuerySwitchGroupDirective;\r\n  @ContentChild(QueryFieldDirective) fieldTemplate!: QueryFieldDirective;\r\n  @ContentChild(QueryEntityDirective) entityTemplate!: QueryEntityDirective;\r\n  @ContentChild(QueryOperatorDirective)\r\n  operatorTemplate!: QueryOperatorDirective;\r\n  @ContentChild(QueryRemoveButtonDirective)\r\n  removeButtonTemplate!: QueryRemoveButtonDirective;\r\n  @ContentChild(QueryEmptyWarningDirective)\r\n  emptyWarningTemplate!: QueryEmptyWarningDirective;\r\n  @ContentChildren(QueryInputDirective, { descendants: true })\r\n  inputTemplates!: QueryList<QueryInputDirective>;\r\n  @ContentChild(QueryArrowIconDirective)\r\n  arrowIconTemplate!: QueryArrowIconDirective;\r\n\r\n  private defaultTemplateTypes: string[] = [\r\n    \"string\",\r\n    \"number\",\r\n    \"time\",\r\n    \"date\",\r\n    \"category\",\r\n    \"boolean\",\r\n    \"multiselect\"\r\n  ];\r\n  private defaultPersistValueTypes: string[] = [\"string\", \"number\", \"time\", \"date\", \"boolean\"];\r\n  private defaultEmptyList: any[] = [];\r\n  private operatorsCache: { [key: string]: string[] } = {};\r\n  private inputContextCache = new Map<Rule, InputContext>();\r\n  private operatorContextCache = new Map<Rule, OperatorContext>();\r\n  private fieldContextCache = new Map<Rule, FieldContext>();\r\n  private entityContextCache = new Map<Rule, EntityContext>();\r\n  private removeButtonContextCache = new Map<Rule, RemoveButtonContext>();\r\n  private buttonGroupContext!: ButtonGroupContext;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\r\n    this.fields = [];\r\n    this.filterFields = [];\r\n    this.entities = [];\r\n  }\r\n\r\n  // ----------OnChanges Implementation----------\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const config = this.config;\r\n    const type = typeof config;\r\n    if (type === \"object\") {\r\n      this.fields = Object.keys(config.fields).map((value) => {\r\n        const field = config.fields[value];\r\n        field.value = field.value || value;\r\n        return field;\r\n      });\r\n      if (config.entities) {\r\n        this.entities = Object.keys(config.entities).map((value) => {\r\n          const entity = config.entities ? config.entities[value] : ([] as any);\r\n          entity.value = entity.value || value;\r\n          return entity;\r\n        });\r\n      } else {\r\n        this.entities = [];\r\n      }\r\n      this.operatorsCache = {};\r\n    } else {\r\n      throw new Error(`Expected 'config' must be a valid object, got ${type} instead.`);\r\n    }\r\n  }\r\n\r\n  // ----------Validator Implementation----------\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const errors: { [key: string]: any } = {};\r\n    const ruleErrorStore = [] as any;\r\n    let hasErrors = false;\r\n\r\n    if (!this.config.allowEmptyRulesets && this.checkEmptyRuleInRuleset(this.data)) {\r\n      errors.empty = \"Empty rulesets are not allowed.\";\r\n      hasErrors = true;\r\n    }\r\n\r\n    this.validateRulesInRuleset(this.data, ruleErrorStore);\r\n\r\n    if (ruleErrorStore.length) {\r\n      errors.rules = ruleErrorStore;\r\n      hasErrors = true;\r\n    }\r\n    return hasErrors ? errors : null;\r\n  }\r\n\r\n  // ----------ControlValueAccessor Implementation----------\r\n\r\n  @Input()\r\n  get value(): RuleSet {\r\n    return this.data;\r\n  }\r\n  set value(value: RuleSet) {\r\n    // When component is initialized without a formControl, null is passed to value\r\n    this.data = value || { condition: \"and\", rules: [] };\r\n    this.handleDataChange();\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = () => fn(this.data);\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = () => fn(this.data);\r\n  }\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // ----------END----------\r\n\r\n  getDisabledState = (): boolean => {\r\n    return this.disabled;\r\n  };\r\n\r\n  findTemplateForRule(rule: Rule): TemplateRef<any> | any {\r\n    const type = this.getInputType(rule.field, rule.operator as string);\r\n    if (type) {\r\n      const queryInput = this.findQueryInput(type);\r\n      if (queryInput) {\r\n        return queryInput.template;\r\n      } else {\r\n        if (this.defaultTemplateTypes.indexOf(type) === -1) {\r\n          console.warn(`Could not find template for field with type: ${type}`);\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  findQueryInput(type: string): QueryInputDirective {\r\n    const templates = this.parentInputTemplates || this.inputTemplates || [];\r\n    return templates.find((item) => item.queryInputType === type) as QueryInputDirective;\r\n  }\r\n\r\n  getOperators(field: string): string[] {\r\n    if (this.operatorsCache[field]) {\r\n      return this.operatorsCache[field];\r\n    }\r\n    let operators = this.defaultEmptyList;\r\n    const fieldObject = this.config.fields[field];\r\n\r\n    if (this.config.getOperators) {\r\n      return this.config.getOperators(field, fieldObject);\r\n    }\r\n\r\n    const type = fieldObject.type;\r\n\r\n    if (fieldObject && fieldObject.operators) {\r\n      operators = fieldObject.operators;\r\n    } else if (type) {\r\n      operators =\r\n        (this.operatorMap && this.operatorMap[type]) ||\r\n        this.defaultOperatorMap[type] ||\r\n        this.defaultEmptyList;\r\n      if (operators.length === 0) {\r\n        console.warn(\r\n          `No operators found for field '${field}' with type ${fieldObject.type}. ` +\r\n            `Please define an 'operators' property on the field or use the 'operatorMap' binding to fix this.`\r\n        );\r\n      }\r\n      if (fieldObject.nullable) {\r\n        operators = operators.concat([\"is null\", \"is not null\"]);\r\n      }\r\n    } else {\r\n      console.warn(`No 'type' property found on field: '${field}'`);\r\n    }\r\n\r\n    // Cache reference to array object, so it won't be computed next time and trigger a rerender.\r\n    this.operatorsCache[field] = operators;\r\n    return operators;\r\n  }\r\n\r\n  getFields(entity: string): Field[] {\r\n    if (this.entities?.length && entity) {\r\n      return this.fields.filter((field) => {\r\n        return field && field.entity === entity;\r\n      });\r\n    } else {\r\n      return this.fields;\r\n    }\r\n  }\r\n\r\n  getInputType(field: string, operator: string): string | null {\r\n    if (this.config.getInputType) {\r\n      return this.config.getInputType(field, operator);\r\n    }\r\n\r\n    if (!this.config.fields[field]) {\r\n      throw new Error(\r\n        `No configuration for field '${field}' could be found! Please add it to config.fields.`\r\n      );\r\n    }\r\n\r\n    const type = this.config.fields[field].type;\r\n    switch (operator) {\r\n      case \"is null\":\r\n      case \"is not null\":\r\n        return null; // No displayed component\r\n      case \"in\":\r\n      case \"not in\":\r\n        return type === \"category\" || type === \"boolean\" ? \"multiselect\" : type;\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  getOptions(field: string): Option[] {\r\n    if (this.config.getOptions) {\r\n      return this.config.getOptions(field);\r\n    }\r\n    return this.config.fields[field].options || this.defaultEmptyList;\r\n  }\r\n\r\n  getClassNames(...args: string[]): any | string[] {\r\n    const clsLookup = this.classNames ? this.classNames : (this.defaultClassNames as any);\r\n    const defaultClassNames = this.defaultClassNames as any;\r\n    const classNames = args\r\n      .map((id: any) => clsLookup[id] || defaultClassNames[id])\r\n      .filter((c: any) => !!c);\r\n    return classNames.length ? classNames.join(\" \") : [];\r\n  }\r\n\r\n  getDefaultField(entity: Entity): Field | null {\r\n    if (!entity) {\r\n      return null;\r\n    } else if (entity.defaultField !== undefined) {\r\n      return this.getDefaultValue(entity.defaultField);\r\n    } else {\r\n      const entityFields = this.fields.filter((field) => {\r\n        return field && field.entity === entity.value;\r\n      });\r\n      if (entityFields && entityFields.length) {\r\n        return entityFields[0];\r\n      } else {\r\n        console.warn(\r\n          `No fields found for entity '${entity.name}'. ` +\r\n            `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`\r\n        );\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultOperator(field: Field): string | null {\r\n    if (field && field.defaultOperator !== undefined) {\r\n      return this.getDefaultValue(field.defaultOperator);\r\n    } else {\r\n      const operators = this.getOperators(field.value as string);\r\n      if (operators && operators.length) {\r\n        return operators[0];\r\n      } else {\r\n        console.warn(\r\n          `No operators found for field '${field.value}'. ` +\r\n            `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`\r\n        );\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  addRule(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRule) {\r\n      this.config.addRule(parent);\r\n    } else {\r\n      const field = this.fields[0];\r\n      parent.rules = parent.rules.concat([\r\n        {\r\n          field: field.value as string,\r\n          operator: this.getDefaultOperator(field) as string,\r\n          value: this.getDefaultValue(field.defaultValue),\r\n          entity: field.entity\r\n        }\r\n      ]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRule(rule: Rule, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.removeRule) {\r\n      this.config.removeRule(rule, parent);\r\n    } else {\r\n      parent.rules = parent.rules.filter((r) => r !== rule);\r\n    }\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.removeButtonContextCache.delete(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  addRuleSet(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRuleSet) {\r\n      this.config.addRuleSet(parent);\r\n    } else {\r\n      parent.rules = parent.rules.concat([{ condition: \"and\", rules: [] }]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRuleSet(ruleset?: RuleSet, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    ruleset = ruleset || this.data;\r\n    parent = parent || this.parentValue;\r\n    if (this.config.removeRuleSet) {\r\n      this.config.removeRuleSet(ruleset, parent);\r\n    } else if (parent) {\r\n      parent.rules = parent.rules.filter((r) => r !== ruleset);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  transitionEnd(e: Event): void {\r\n    this.treeContainer.nativeElement.style.maxHeight = null;\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    this.computedTreeContainerHeight();\r\n    setTimeout(() => {\r\n      this.data.collapsed = !this.data.collapsed;\r\n    }, 100);\r\n  }\r\n\r\n  computedTreeContainerHeight(): void {\r\n    const nativeElement: HTMLElement = this.treeContainer.nativeElement;\r\n    if (nativeElement && nativeElement.firstElementChild) {\r\n      nativeElement.style.maxHeight = nativeElement.firstElementChild.clientHeight + 8 + \"px\";\r\n    }\r\n  }\r\n\r\n  changeCondition(value: string): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.data.condition = value;\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeOperator(rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.config.coerceValueForOperator) {\r\n      rule.value = this.config.coerceValueForOperator(rule.operator as string, rule.value, rule);\r\n    } else {\r\n      rule.value = this.coerceValueForOperator(rule.operator as string, rule.value, rule);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  coerceValueForOperator(operator: string, value: any, rule: Rule): any {\r\n    const inputType: string | null = this.getInputType(rule.field, operator);\r\n    if (inputType === \"multiselect\" && !Array.isArray(value)) {\r\n      return [value];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  changeInput(): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeField(fieldValue: string, rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const inputContext = this.inputContextCache.get(rule);\r\n    const currentField = inputContext && inputContext.field;\r\n\r\n    const nextField: Field = this.config.fields[fieldValue];\r\n\r\n    const nextValue = this.calculateFieldChangeValue(currentField as Field, nextField, rule.value);\r\n\r\n    if (nextValue !== undefined) {\r\n      rule.value = nextValue;\r\n    } else {\r\n      delete rule.value;\r\n    }\r\n\r\n    rule.operator = this.getDefaultOperator(nextField) as string;\r\n\r\n    // Create new context objects so templates will automatically update\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.getInputContext(rule);\r\n    this.getFieldContext(rule);\r\n    this.getOperatorContext(rule);\r\n    this.getEntityContext(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeEntity(entityValue: string, rule: Rule, index: number, data: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    let i = index;\r\n    let rs = data;\r\n    const entity: Entity = this.entities.find((e) => e.value === entityValue) as Entity;\r\n    const defaultField: Field = this.getDefaultField(entity) as Field;\r\n    if (!rs) {\r\n      rs = this.data;\r\n      i = rs.rules.findIndex((x) => x === rule);\r\n    }\r\n    rule.field = defaultField.value as string;\r\n    rs.rules[i] = rule;\r\n    if (defaultField) {\r\n      this.changeField(defaultField.value as string, rule);\r\n    } else {\r\n      this.handleTouched();\r\n      this.handleDataChange();\r\n    }\r\n  }\r\n\r\n  getDefaultValue(defaultValue: any): any {\r\n    switch (typeof defaultValue) {\r\n      case \"function\":\r\n        return defaultValue();\r\n      default:\r\n        return defaultValue;\r\n    }\r\n  }\r\n\r\n  getOperatorTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentOperatorTemplate || this.operatorTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getFieldTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentFieldTemplate || this.fieldTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEntityTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentEntityTemplate || this.entityTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getArrowIconTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentArrowIconTemplate || this.arrowIconTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getButtonGroupTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentButtonGroupTemplate || this.buttonGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getSwitchGroupTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentSwitchGroupTemplate || this.switchGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getRemoveButtonTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentRemoveButtonTemplate || this.removeButtonTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEmptyWarningTemplate(): TemplateRef<any> | null {\r\n    const t = this.parentEmptyWarningTemplate || this.emptyWarningTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getQueryItemClassName(local: LocalRuleMeta): string {\r\n    let cls = this.getClassNames(\"row\", \"connector\", \"transition\");\r\n    cls += \" \" + this.getClassNames(local.ruleset ? \"ruleSet\" : \"rule\");\r\n    if (local.invalid) {\r\n      cls += \" \" + this.getClassNames(\"invalidRuleSet\");\r\n    }\r\n    return cls as string;\r\n  }\r\n\r\n  getButtonGroupContext(): ButtonGroupContext {\r\n    if (!this.buttonGroupContext) {\r\n      this.buttonGroupContext = {\r\n        addRule: this.addRule.bind(this),\r\n        addRuleSet: this.allowRuleset && (this.addRuleSet.bind(this) as any),\r\n        removeRuleSet:\r\n          this.allowRuleset && this.parentValue && (this.removeRuleSet.bind(this) as any),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: this.data\r\n      };\r\n    }\r\n    return this.buttonGroupContext;\r\n  }\r\n\r\n  getRemoveButtonContext(rule: Rule): RemoveButtonContext {\r\n    if (!this.removeButtonContextCache.has(rule)) {\r\n      this.removeButtonContextCache.set(rule, {\r\n        removeRule: this.removeRule.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.removeButtonContextCache.get(rule) as RemoveButtonContext;\r\n  }\r\n\r\n  getFieldContext(rule: Rule): FieldContext {\r\n    if (!this.fieldContextCache.has(rule)) {\r\n      this.fieldContextCache.set(rule, {\r\n        onChange: this.changeField.bind(this),\r\n        getFields: this.getFields.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        fields: this.fields,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.fieldContextCache.get(rule) as FieldContext;\r\n  }\r\n\r\n  getEntityContext(rule: Rule): EntityContext {\r\n    if (!this.entityContextCache.has(rule)) {\r\n      this.entityContextCache.set(rule, {\r\n        onChange: this.changeEntity.bind(this) as any,\r\n        getDisabledState: this.getDisabledState,\r\n        entities: this.entities,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.entityContextCache.get(rule) as EntityContext;\r\n  }\r\n\r\n  getSwitchGroupContext(): SwitchGroupContext {\r\n    return {\r\n      onChange: this.changeCondition.bind(this),\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getArrowIconContext(): ArrowIconContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getEmptyWarningContext(): EmptyWarningContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      message: this.emptyMessage,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getOperatorContext(rule: Rule): OperatorContext {\r\n    if (!this.operatorContextCache.has(rule)) {\r\n      this.operatorContextCache.set(rule, {\r\n        onChange: this.changeOperator.bind(this) as any,\r\n        getDisabledState: this.getDisabledState,\r\n        operators: this.getOperators(rule.field),\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.operatorContextCache.get(rule) as OperatorContext;\r\n  }\r\n\r\n  getInputContext(rule: Rule): InputContext {\r\n    if (!this.inputContextCache.has(rule)) {\r\n      this.inputContextCache.set(rule, {\r\n        onChange: this.changeInput.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        options: this.getOptions(rule.field),\r\n        field: this.config.fields[rule.field],\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.inputContextCache.get(rule) as InputContext;\r\n  }\r\n\r\n  private calculateFieldChangeValue(currentField: Field, nextField: Field, currentValue: any): any {\r\n    if (this.config.calculateFieldChangeValue != null) {\r\n      return this.config.calculateFieldChangeValue(currentField, nextField, currentValue);\r\n    }\r\n\r\n    const canKeepValue = () => {\r\n      if (currentField == null || nextField == null) {\r\n        return false;\r\n      }\r\n      return (\r\n        currentField.type === nextField.type &&\r\n        this.defaultPersistValueTypes.indexOf(currentField.type) !== -1\r\n      );\r\n    };\r\n\r\n    if (this.persistValueOnFieldChange && canKeepValue()) {\r\n      return currentValue;\r\n    }\r\n\r\n    if (nextField && nextField.defaultValue !== undefined) {\r\n      return this.getDefaultValue(nextField.defaultValue);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private checkEmptyRuleInRuleset(ruleset: RuleSet): boolean {\r\n    if (!ruleset || !ruleset.rules || ruleset.rules.length === 0) {\r\n      return true;\r\n    } else {\r\n      return ruleset.rules.some((item: RuleSet | any) => {\r\n        if (item.rules) {\r\n          return this.checkEmptyRuleInRuleset(item);\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private validateRulesInRuleset(ruleset: RuleSet, errorStore: any[]) {\r\n    if (ruleset && ruleset.rules && ruleset.rules.length > 0) {\r\n      ruleset.rules.forEach((item) => {\r\n        if ((item as RuleSet).rules) {\r\n          return this.validateRulesInRuleset(item as RuleSet, errorStore);\r\n        } else if ((item as Rule).field) {\r\n          const field = this.config.fields[(item as Rule).field];\r\n          if (field && field.validator) {\r\n            const error = field.validator(item as Rule, ruleset);\r\n            if (error != null) {\r\n              errorStore.push(error);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleDataChange(): void {\r\n    this.changeDetectorRef.markForCheck();\r\n    if (this.onChangeCallback) {\r\n      this.onChangeCallback();\r\n    }\r\n    if (this.parentChangeCallback) {\r\n      this.parentChangeCallback();\r\n    }\r\n  }\r\n\r\n  private handleTouched(): void {\r\n    if (this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n    if (this.parentTouchedCallback) {\r\n      this.parentTouchedCallback();\r\n    }\r\n  }\r\n}\r\n","<div [ngClass]=\"getClassNames('switchRow')\">\r\n  <ng-template #defaultArrowIcon>\r\n    <i [ngClass]=\"getClassNames('arrowIcon')\"></i>\r\n  </ng-template>\r\n\r\n  <a\r\n    *ngIf=\"allowCollapse\"\r\n    (click)=\"toggleCollapse()\"\r\n    [ngClass]=\"getClassNames('arrowIconButton', data.collapsed ? 'collapsed' : '')\"\r\n  >\r\n    <ng-container *ngIf=\"getArrowIconTemplate() as template; else defaultArrowIcon\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getArrowIconContext()\"></ng-container>\r\n    </ng-container>\r\n  </a>\r\n\r\n  <ng-container *ngIf=\"getButtonGroupTemplate() as template; else defaultButtonGroup\">\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getButtonGroupContext()\"></ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultButtonGroup>\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"addRule()\"\r\n        [ngClass]=\"getClassNames('button')\"\r\n        [disabled]=\"disabled\"\r\n      >\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Rule\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"addRuleSet()\"\r\n        [ngClass]=\"getClassNames('button')\"\r\n        *ngIf=\"allowRuleset\"\r\n        [disabled]=\"disabled\"\r\n      >\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Ruleset\r\n      </button>\r\n      <ng-container *ngIf=\"!!parentValue && allowRuleset\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"removeRuleSet()\"\r\n          [ngClass]=\"getClassNames('button', 'removeButton')\"\r\n          [disabled]=\"disabled\"\r\n        >\r\n          <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n        </button>\r\n      </ng-container>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-container *ngIf=\"getSwitchGroupTemplate() as template; else defaultSwitchGroup\">\r\n    <ng-container *ngTemplateOutlet=\"template; context: getSwitchGroupContext()\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultSwitchGroup>\r\n    <div [ngClass]=\"getClassNames('switchGroup', 'transition')\" *ngIf=\"data\">\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input\r\n          type=\"radio\"\r\n          [ngClass]=\"getClassNames('switchRadio')\"\r\n          [(ngModel)]=\"data.condition\"\r\n          [disabled]=\"disabled\"\r\n          value=\"and\"\r\n          #andOption\r\n        />\r\n        <label (click)=\"changeCondition(andOption.value)\" [ngClass]=\"getClassNames('switchLabel')\"\r\n          >AND</label\r\n        >\r\n      </div>\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input\r\n          type=\"radio\"\r\n          [ngClass]=\"getClassNames('switchRadio')\"\r\n          [(ngModel)]=\"data.condition\"\r\n          [disabled]=\"disabled\"\r\n          value=\"or\"\r\n          #orOption\r\n        />\r\n        <label (click)=\"changeCondition(orOption.value)\" [ngClass]=\"getClassNames('switchLabel')\"\r\n          >OR</label\r\n        >\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<div\r\n  #treeContainer\r\n  (transitionend)=\"transitionEnd($event)\"\r\n  [ngClass]=\"getClassNames('treeContainer', data.collapsed ? 'collapsed' : '')\"\r\n>\r\n  <ul [ngClass]=\"getClassNames('tree')\" *ngIf=\"data && data.rules\">\r\n    <ng-container *ngFor=\"let rule of data.rules; let i = index\">\r\n      <ng-container\r\n        *ngIf=\"{\r\n          ruleset: !!rule.rules,\r\n          invalid: !config.allowEmptyRulesets && rule.rules && rule.rules.length === 0\r\n        } as local\"\r\n      >\r\n        <li [ngClass]=\"getQueryItemClassName(local)\">\r\n          <ng-container *ngIf=\"!local.ruleset\">\r\n            <ng-container *ngIf=\"getRemoveButtonTemplate() as template; else defaultRemoveButton\">\r\n              <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"template; context: getRemoveButtonContext(rule)\"\r\n                ></ng-container>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultRemoveButton>\r\n              <div [ngClass]=\"getClassNames('removeButtonSize', 'rightAlign')\">\r\n                <button\r\n                  type=\"button\"\r\n                  [ngClass]=\"getClassNames('button', 'removeButton')\"\r\n                  (click)=\"removeRule(rule, data)\"\r\n                  [disabled]=\"disabled\"\r\n                >\r\n                  <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div *ngIf=\"entities?.length\" class=\"q-inline-block-display\">\r\n              <ng-container *ngIf=\"getEntityTemplate() as template; else defaultEntity\">\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"template; context: getEntityContext(rule)\"\r\n                ></ng-container>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <ng-template #defaultEntity>\r\n              <div [ngClass]=\"getClassNames('entityControlSize')\">\r\n                <select\r\n                  [ngClass]=\"getClassNames('entityControl')\"\r\n                  [(ngModel)]=\"rule.entity\"\r\n                  (ngModelChange)=\"changeEntity($event, rule, i, data)\"\r\n                  [disabled]=\"disabled\"\r\n                >\r\n                  <option *ngFor=\"let entity of entities\" [ngValue]=\"entity.value\">\r\n                    {{ entity.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getFieldTemplate() as template; else defaultField\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"template; context: getFieldContext(rule)\"\r\n              ></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultField>\r\n              <div [ngClass]=\"getClassNames('fieldControlSize')\">\r\n                <select\r\n                  [ngClass]=\"getClassNames('fieldControl')\"\r\n                  [(ngModel)]=\"rule.field\"\r\n                  (ngModelChange)=\"changeField($event, rule)\"\r\n                  [disabled]=\"disabled\"\r\n                >\r\n                  <option *ngFor=\"let field of getFields(rule.entity)\" [ngValue]=\"field.value\">\r\n                    {{ field.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getOperatorTemplate() as template; else defaultOperator\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"template; context: getOperatorContext(rule)\"\r\n              ></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultOperator>\r\n              <div [ngClass]=\"getClassNames('operatorControlSize')\">\r\n                <select\r\n                  [ngClass]=\"getClassNames('operatorControl')\"\r\n                  [(ngModel)]=\"rule.operator\"\r\n                  (ngModelChange)=\"changeOperator(rule)\"\r\n                  [disabled]=\"disabled\"\r\n                >\r\n                  <option *ngFor=\"let operator of getOperators(rule.field)\" [ngValue]=\"operator\">\r\n                    {{ operator }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"findTemplateForRule(rule) as template; else defaultInput\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"template; context: getInputContext(rule)\"\r\n              ></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultInput>\r\n              <div\r\n                [ngClass]=\"getClassNames('inputControlSize')\"\r\n                [ngSwitch]=\"getInputType(rule.field, rule.operator)\"\r\n              >\r\n                <input\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'string'\"\r\n                  type=\"text\"\r\n                />\r\n                <input\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'number'\"\r\n                  type=\"number\"\r\n                />\r\n                <input\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'date'\"\r\n                  type=\"date\"\r\n                />\r\n                <input\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'time'\"\r\n                  type=\"time\"\r\n                />\r\n                <select\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'category'\"\r\n                >\r\n                  <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                    {{ opt.name }}\r\n                  </option>\r\n                </select>\r\n                <ng-container *ngSwitchCase=\"'multiselect'\">\r\n                  <select\r\n                    [ngClass]=\"getClassNames('inputControl')\"\r\n                    [(ngModel)]=\"rule.value\"\r\n                    (ngModelChange)=\"changeInput()\"\r\n                    [disabled]=\"disabled\"\r\n                    multiple\r\n                  >\r\n                    <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                      {{ opt.name }}\r\n                    </option>\r\n                  </select>\r\n                </ng-container>\r\n                <input\r\n                  [ngClass]=\"getClassNames('inputControl')\"\r\n                  [(ngModel)]=\"rule.value\"\r\n                  (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\"\r\n                  *ngSwitchCase=\"'boolean'\"\r\n                  type=\"checkbox\"\r\n                />\r\n              </div>\r\n            </ng-template>\r\n          </ng-container>\r\n          <query-builder\r\n            *ngIf=\"local.ruleset\"\r\n            [data]=\"rule\"\r\n            [disabled]=\"disabled\"\r\n            [parentTouchedCallback]=\"parentTouchedCallback || onTouchedCallback\"\r\n            [parentChangeCallback]=\"parentChangeCallback || onChangeCallback\"\r\n            [parentInputTemplates]=\"parentInputTemplates || inputTemplates\"\r\n            [parentOperatorTemplate]=\"parentOperatorTemplate || operatorTemplate\"\r\n            [parentFieldTemplate]=\"parentFieldTemplate || fieldTemplate\"\r\n            [parentEntityTemplate]=\"parentEntityTemplate || entityTemplate\"\r\n            [parentSwitchGroupTemplate]=\"parentSwitchGroupTemplate || switchGroupTemplate\"\r\n            [parentButtonGroupTemplate]=\"parentButtonGroupTemplate || buttonGroupTemplate\"\r\n            [parentRemoveButtonTemplate]=\"parentRemoveButtonTemplate || removeButtonTemplate\"\r\n            [parentEmptyWarningTemplate]=\"parentEmptyWarningTemplate || emptyWarningTemplate\"\r\n            [parentArrowIconTemplate]=\"parentArrowIconTemplate || arrowIconTemplate\"\r\n            [parentValue]=\"data\"\r\n            [classNames]=\"classNames\"\r\n            [config]=\"config\"\r\n            [allowRuleset]=\"allowRuleset\"\r\n            [allowCollapse]=\"allowCollapse\"\r\n            [emptyMessage]=\"emptyMessage\"\r\n            [operatorMap]=\"operatorMap\"\r\n          >\r\n          </query-builder>\r\n\r\n          <ng-container *ngIf=\"getEmptyWarningTemplate() as template; else defaultEmptyWarning\">\r\n            <ng-container *ngIf=\"local.invalid\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"template; context: getEmptyWarningContext()\"\r\n              ></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <ng-template #defaultEmptyWarning>\r\n            <p [ngClass]=\"getClassNames('emptyWarning')\" *ngIf=\"local.invalid\">\r\n              {{ emptyMessage }}\r\n            </p>\r\n          </ng-template>\r\n        </li>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ul>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { QueryBuilderComponent } from \"./query-builder/query-builder.component\";\r\n\r\nimport { QueryArrowIconDirective } from \"./query-builder/query-arrow-icon.directive\";\r\nimport { QueryFieldDirective } from \"./query-builder/query-field.directive\";\r\nimport { QueryInputDirective } from \"./query-builder/query-input.directive\";\r\nimport { QueryEntityDirective } from \"./query-builder/query-entity.directive\";\r\nimport { QueryOperatorDirective } from \"./query-builder/query-operator.directive\";\r\nimport { QueryButtonGroupDirective } from \"./query-builder/query-button-group.directive\";\r\nimport { QuerySwitchGroupDirective } from \"./query-builder/query-switch-group.directive\";\r\nimport { QueryRemoveButtonDirective } from \"./query-builder/query-remove-button.directive\";\r\nimport { QueryEmptyWarningDirective } from \"./query-builder/query-empty-warning.directive\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  declarations: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ],\r\n  exports: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ]\r\n})\r\nexport class NgxAngularQueryBuilderModule {}\r\n","/*\r\n * Public API Surface of ngx-angular-query-builder\r\n */\r\n\r\nexport * from \"./lib/query-builder/query-builder.interfaces\";\r\n\r\nexport * from \"./lib/query-builder/query-builder.component\";\r\n\r\nexport * from \"./lib/query-builder/query-button-group.directive\";\r\nexport * from \"./lib/query-builder/query-entity.directive\";\r\nexport * from \"./lib/query-builder/query-field.directive\";\r\nexport * from \"./lib/query-builder/query-input.directive\";\r\nexport * from \"./lib/query-builder/query-operator.directive\";\r\nexport * from \"./lib/query-builder/query-switch-group.directive\";\r\nexport * from \"./lib/query-builder/query-remove-button.directive\";\r\nexport * from \"./lib/query-builder/query-empty-warning.directive\";\r\nexport * from \"./lib/query-builder/query-arrow-icon.directive\";\r\n\r\nexport * from \"./lib/ngx-angular-query-builder.module\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}